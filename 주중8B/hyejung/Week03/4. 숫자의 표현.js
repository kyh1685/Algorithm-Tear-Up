/**
 * 통과 여부 : X (효율성에서 실패했어요)
 * 시간 : 15분
 * 점수 : X
 */
/*
[문제]
Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다.

1 + 2 + 3 + 4 + 5 = 15
4 + 5 + 6 = 15
7 + 8 = 15
15 = 15
자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요.
*/

// 1번 풀이 : O(n^2) => 실패
function solution(n) {
  // n/2 까지만 돌리면 된다.
  let cnt = 0;
  let start = 1;

  for (let i = start; i <= n; i++) {
    let sum = i;
    for (let j = i + 1; j <= n; j++) {
      sum += j;
      if (sum === n) {
        cnt++;
        start = j;
        break;
      } else if (sum > n) break;
    }
  }
  return cnt + 1;
}

// const result = solution(5);
// console.log(result);

// 다른 풀이 : O(n)
// 약수의 갯수로 푸는 풀이라고 한다... 솔직히 이해가 잘 안됩니다.
// n의 홀수인 약수의 갯수를 구하는 풀이인데요...
function solution2(n) {
  let answer = 0;
  for (let i = 0; i <= n; i++) {
    // n을 i로 나누었을 때 나누어 떨어지고, i가 홀수이다? 그러면 홀수인 약수니까 answer ++
    if (n % i === 0 && i % 2 === 1) answer++;
  }
  return answer;
}
const result2 = solution2(15);
console.log(result2);

/*
테스트 1 〉	통과 (0.13ms, 33.5MB)
테스트 2 〉	통과 (0.17ms, 33.4MB)
테스트 3 〉	통과 (0.15ms, 33.4MB)
테스트 4 〉	통과 (0.15ms, 33.5MB)
테스트 5 〉	통과 (0.12ms, 33.4MB)
테스트 6 〉	통과 (0.11ms, 33.5MB)
테스트 7 〉	통과 (0.14ms, 33.5MB)
테스트 8 〉	통과 (0.13ms, 33.5MB)
테스트 9 〉	통과 (0.11ms, 33.4MB)
테스트 10 〉	통과 (0.21ms, 33.4MB)
테스트 11 〉	통과 (0.18ms, 33.6MB)
테스트 12 〉	통과 (0.15ms, 33.5MB)
테스트 13 〉	통과 (0.14ms, 33.5MB)
테스트 14 〉	통과 (0.14ms, 33.5MB)
테스트 15 〉	통과 (0.04ms, 33.5MB)
테스트 16 〉	통과 (0.06ms, 33.2MB)
테스트 17 〉	통과 (0.11ms, 33.5MB)
테스트 18 〉	통과 (0.04ms, 33.5MB)
  */

// 효율성
/*
테스트 1 〉	실패 (시간 초과)
테스트 2 〉	통과 (1.72ms, 36.1MB)
테스트 3 〉	실패 (시간 초과)
테스트 4 〉	실패 (시간 초과)
테스트 5 〉	실패 (시간 초과)
테스트 6 〉	실패 (시간 초과)
 */

/*
민하님의 특별강의~!
* 4 + 5 + 6 = 15
* n-1 + n + n+1 = 15
* 3n = 15
* n = 5

=> 홀수로 봐야한다.

* 7 + 8 = 15
* 2n = n+1 = 15
* 2n = 14
* 연속되는 두 수 ~ 한 수는 무조건 홀수가 된다. 
*/
