/* 
테스트 1 〉	통과 (0.05ms, 33.5MB)
테스트 2 〉	통과 (0.23ms, 33.6MB)
테스트 3 〉	통과 (0.16ms, 33.5MB)
테스트 4 〉	통과 (0.21ms, 33.4MB)
테스트 5 〉	통과 (0.18ms, 33.5MB)
테스트 6 〉	통과 (0.12ms, 33.5MB)
테스트 7 〉	통과 (0.23ms, 33.5MB)
테스트 8 〉	통과 (0.17ms, 33.5MB)
테스트 9 〉	통과 (0.20ms, 33.6MB)
테스트 10 〉	통과 (0.26ms, 33.6MB)
테스트 11 〉	통과 (0.19ms, 33.5MB)
테스트 12 〉	통과 (0.24ms, 33.5MB)
테스트 13 〉	통과 (0.25ms, 33.5MB)
테스트 14 〉	통과 (0.23ms, 33.5MB)
테스트 15 〉	통과 (0.04ms, 33.5MB)
테스트 16 〉	통과 (0.04ms, 33.5MB)
테스트 17 〉	통과 (0.16ms, 33.5MB)
테스트 18 〉	통과 (0.06ms, 33.5MB)
효율성  테스트
테스트 1 〉	통과 (2.65ms, 36.2MB)
테스트 2 〉	통과 (1.72ms, 36.2MB)
테스트 3 〉	통과 (1.77ms, 36.2MB)
테스트 4 〉	통과 (1.66ms, 36.3MB)
테스트 5 〉	통과 (1.66ms, 36.2MB)
테스트 6 〉	통과 (1.74ms, 36.2MB)
채점 결과
정확성: 75.0
효율성: 25.0
합계: 100.0 / 100.0
*/

function solution(n) {
  let limit = Math.round(n / 2);
  let count = 1; // n자체일경우의 수 1

  let total = 0;
  for (let i = 1; i < limit; i++) {
    total = i;
    for (let j = i + 1; j <= limit; j++) {
      total += j;
      if (total === n) {
        count++;
        break;
      } 
      else if (total > n) break;    //total이 n보다 더크면 추가로 더할 필요가 없으므로
    }
  }
  return count;
}
