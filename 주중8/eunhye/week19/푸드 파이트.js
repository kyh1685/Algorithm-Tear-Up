function solution(food) {
  // 왼쪽부터 만들어서 0넣고 뒤집기
  // 음식 종류와 양이 같아야 해서 1개 갖고 오면 못 먹음
  const arr = [];

  food.forEach((el, idx) => {
    if (el >= 2) {
      const eat = Math.floor(el / 2);
      // repeat은 ... number type에 안 먹는다...
      arr.push(String(idx).repeat(eat));
    }
  });
  return arr.join('') + 0 + arr.reverse().join('');
}

// 테스트 1 〉	통과 (0.07ms, 33.5MB)
// 테스트 2 〉	통과 (0.14ms, 33.5MB)
// 테스트 3 〉	통과 (0.07ms, 33.4MB)
// 테스트 4 〉	통과 (0.14ms, 33.4MB)
// 테스트 5 〉	통과 (0.06ms, 33.4MB)
// 테스트 6 〉	통과 (0.07ms, 33.5MB)
// 테스트 7 〉	통과 (0.07ms, 33.4MB)
// 테스트 8 〉	통과 (0.07ms, 33.4MB)
// 테스트 9 〉	통과 (0.06ms, 33.5MB)
// 테스트 10 〉	통과 (0.07ms, 33.5MB)
// 테스트 11 〉	통과 (0.06ms, 33.5MB)
// 테스트 12 〉	통과 (0.06ms, 33.4MB)
// 테스트 13 〉	통과 (0.06ms, 33.5MB)
// 테스트 14 〉	통과 (0.14ms, 33.4MB)
// 테스트 15 〉	통과 (0.06ms, 33.4MB)
// 테스트 16 〉	통과 (0.06ms, 33.4MB)
// 테스트 17 〉	통과 (0.06ms, 33.4MB)
// 테스트 18 〉	통과 (0.06ms, 33.4MB)
// 테스트 19 〉	통과 (0.06ms, 33.5MB)
// 테스트 20 〉	통과 (0.14ms, 33.4MB)
